<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JackerooChu的博客</title>
  
  <subtitle>一个iOS小白的技术积累</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chuzhaozhi.cn/"/>
  <updated>2018-04-17T12:25:58.158Z</updated>
  <id>http://chuzhaozhi.cn/</id>
  
  <author>
    <name>JackerooChu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS中优雅的使用iconfont</title>
    <link href="http://chuzhaozhi.cn/iOS%E4%B8%AD%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8iconfont.html"/>
    <id>http://chuzhaozhi.cn/iOS中优雅的使用iconfont.html</id>
    <published>2018-04-04T08:32:40.000Z</published>
    <updated>2018-04-17T12:25:58.158Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是iconfont"><a href="#1-什么是iconfont" class="headerlink" title="1.什么是iconfont"></a>1.什么是iconfont</h2><blockquote class="blockquote-center"><br>&ensp;&ensp;&ensp;&ensp;iconFont拆开来看，就是 Icon + Font，这样估计大家应该都能理解是什么，那两者结合是什么呢？没错！就是 IconFont ！让开发者像使用字体一样使用图标。如果自己不会做的话，可以直接去阿里的<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">iconfont图标库</a>下载自己需要的图标。<br></blockquote><h2 id="2-为什么要使用iconfont"><a href="#2-为什么要使用iconfont" class="headerlink" title="2.为什么要使用iconfont"></a>2.为什么要使用iconfont</h2><p>&ensp;&ensp;&ensp;&ensp;在开发项目时，不可避免的会用到各种图标，为了适配不同的设备，通常需要@2x和@3x两套图，例如说我们tabBar上使用的图标。有些app有换肤的需要，还需要多套不同的图来进行匹配不同的主题。如果使用切图，这对于设计和开发来说无疑是增加了工作量，而且ipa的体积也会增大。</p><p>使用iconfont的好处:</p><ol><li>减小ipa包的大小</li><li>图标保真缩放，多设备适配一套图解决问题</li><li>适应换肤要求，使用方便。</li></ol><h2 id="3-怎么用iconfont"><a href="#3-怎么用iconfont" class="headerlink" title="3.怎么用iconfont"></a>3.怎么用iconfont</h2><h6 id="1-首先去iconfont图标库下载自己需要的图标。"><a href="#1-首先去iconfont图标库下载自己需要的图标。" class="headerlink" title="1. 首先去iconfont图标库下载自己需要的图标。"></a>1. 首先去<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">iconfont图标库</a>下载自己需要的图标。</h6><p><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fbd94fa67dea?w=419&amp;h=272&amp;f=gif&amp;s=19630995" alt="下载图片"></p><p>如图我们可以选择自己需要的icon加入到购物车，然后加入项目里，当然你也可以直接在购物车直接下载，但是这样只是没有修改icon为自己想要的样式，加入项目中，你可以自己任意修改icon为自己想要的样式。<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb988bc5fcbc?w=1240&amp;h=754&amp;f=jpeg&amp;s=34197" alt="购物车直接下载"></p><blockquote><p>注意：这里是下载代码，这样我们就可以在项目中直接使用</p></blockquote><h6 id="2-将下载下来的icon资源添加到自己的项目中。"><a href="#2-将下载下来的icon资源添加到自己的项目中。" class="headerlink" title="2.将下载下来的icon资源添加到自己的项目中。"></a>2.将下载下来的icon资源添加到自己的项目中。</h6><p><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb988c1c16e4?w=1108&amp;h=858&amp;f=jpeg&amp;s=102941" alt="下载之后文件夹内容"><br>我们所需要的就是这个iconfont.ttf，对于这个ttf文件，我想我们并不陌生吧。新建项目，将这个ttf文件拖入自己的项目里。<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb988c2668b4?w=1240&amp;h=670&amp;f=jpeg&amp;s=81590" alt="加入项目"></p><blockquote><p>注意：勾选如图选项</p></blockquote><p>接下来配置项目加载这个文件</p><ul><li>检查文件是否在项目中，不然会崩溃<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb988c25f899?w=1240&amp;h=605&amp;f=jpeg&amp;s=73436" alt="check"></li><li>在plist文件中加入字体<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fbe92dd04385?w=840&amp;h=524&amp;f=gif&amp;s=29884118" alt="plist"><br>接下来我们借助淘点点科技写的一个关于iconfont封装，方便我们使用iconfont。iconfont的封装包括<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb988d49c856?w=436&amp;h=338&amp;f=jpeg&amp;s=19892" alt="工具类"></li></ul><ol><li><p><code>TBCityIconInfo.h</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line"></span><br><span class="line">@interface TBCityIconInfo : NSObject</span><br><span class="line"></span><br><span class="line">@property (nonatomic, strong) NSString *text;</span><br><span class="line">@property (nonatomic, assign) NSInteger size;</span><br><span class="line">@property (nonatomic, strong) UIColor *color;</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color;</span><br><span class="line">+ (instancetype)iconInfoWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>TBCityIconInfo.m</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;TBCityIconInfo.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation TBCityIconInfo</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color &#123;</span><br><span class="line">if (self = [super init]) &#123;</span><br><span class="line">self.text = text;</span><br><span class="line">self.size = size;</span><br><span class="line">self.color = color;</span><br><span class="line">&#125;</span><br><span class="line">return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (instancetype)iconInfoWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color &#123;</span><br><span class="line">return [[TBCityIconInfo alloc] initWithText:text size:size color:color];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>TBCityIconFont.h</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;UIImage+TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;TBCityIconInfo.h&quot;</span><br><span class="line"></span><br><span class="line">#define TBCityIconInfoMake(text, imageSize, imageColor) [TBCityIconInfo iconInfoWithText:text size:imageSize color:imageColor]</span><br><span class="line"></span><br><span class="line">@interface TBCityIconFont : NSObject</span><br><span class="line"></span><br><span class="line">+ (UIFont *)fontWithSize: (CGFloat)size;</span><br><span class="line">+ (void)setFontName:(NSString *)fontName;</span><br></pre></td></tr></table></figure></li><li><p><code>TBCityIconFont.m</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &lt;CoreText/CoreText.h&gt;</span><br><span class="line"></span><br><span class="line">@implementation TBCityIconFont</span><br><span class="line"></span><br><span class="line">static NSString *_fontName;</span><br><span class="line"></span><br><span class="line">+ (void)registerFontWithURL:(NSURL *)url &#123;</span><br><span class="line">NSAssert([[NSFileManager defaultManager] fileExistsAtPath:[url path]], @&quot;Font file doesn&apos;t exist&quot;);</span><br><span class="line">CGDataProviderRef fontDataProvider = CGDataProviderCreateWithURL((__bridge CFURLRef)url);</span><br><span class="line">CGFontRef newFont = CGFontCreateWithDataProvider(fontDataProvider);</span><br><span class="line">CGDataProviderRelease(fontDataProvider);</span><br><span class="line">CTFontManagerRegisterGraphicsFont(newFont, nil);</span><br><span class="line">CGFontRelease(newFont);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (UIFont *)fontWithSize:(CGFloat)size &#123;</span><br><span class="line">UIFont *font = [UIFont fontWithName:[self fontName] size:size];</span><br><span class="line">if (font == nil) &#123;</span><br><span class="line">NSURL *fontFileUrl = [[NSBundle mainBundle] URLForResource:[self fontName] withExtension:@&quot;ttf&quot;];</span><br><span class="line">[self registerFontWithURL: fontFileUrl];</span><br><span class="line">font = [UIFont fontWithName:[self fontName] size:size];</span><br><span class="line">NSAssert(font, @&quot;UIFont object should not be nil, check if the font file is added to the application bundle and you&apos;re using the correct font name.&quot;);</span><br><span class="line">&#125;</span><br><span class="line">return font;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (void)setFontName:(NSString *)fontName &#123;</span><br><span class="line">_fontName = fontName;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ (NSString *)fontName &#123;</span><br><span class="line">return _fontName ? : @&quot;iconfont&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>UIImage+TBCityIconFont.h</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line">#import &quot;TBCityIconInfo.h&quot;</span><br><span class="line"></span><br><span class="line">@interface UIImage (TBCityIconFont)</span><br><span class="line"></span><br><span class="line">+ (UIImage *)iconWithInfo:(TBCityIconInfo *)info;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>UIImage+TBCityIconFont.m</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;UIImage+TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &lt;CoreText/CoreText.h&gt;</span><br><span class="line"></span><br><span class="line">@implementation UIImage (TBCityIconFont)</span><br><span class="line"></span><br><span class="line">+ (UIImage *)iconWithInfo:(TBCityIconInfo *)info &#123;</span><br><span class="line">CGFloat size = info.size;</span><br><span class="line">CGFloat scale = [UIScreen mainScreen].scale;</span><br><span class="line">CGFloat realSize = size * scale;</span><br><span class="line">UIFont *font = [TBCityIconFont fontWithSize:realSize];</span><br><span class="line">UIGraphicsBeginImageContext(CGSizeMake(realSize, realSize));</span><br><span class="line">CGContextRef context = UIGraphicsGetCurrentContext();</span><br><span class="line"></span><br><span class="line">if ([info.text respondsToSelector:@selector(drawAtPoint:withAttributes:)]) &#123;</span><br><span class="line">/**</span><br><span class="line">* 如果这里抛出异常，请打开断点列表，右击All Exceptions -&gt; Edit Breakpoint -&gt; All修改为Objective-C</span><br><span class="line">* See: http://stackoverflow.com/questions/1163981/how-to-add-a-breakpoint-to-objc-exception-throw/14767076#14767076</span><br><span class="line">*/</span><br><span class="line">[info.text drawAtPoint:CGPointZero withAttributes:@&#123;NSFontAttributeName:font, NSForegroundColorAttributeName: info.color&#125;];</span><br><span class="line">&#125; else &#123;</span><br><span class="line"></span><br><span class="line">#pragma clang diagnostic push</span><br><span class="line">#pragma clang diagnostic ignored &quot;-Wdeprecated-declarations&quot;</span><br><span class="line">CGContextSetFillColorWithColor(context, info.color.CGColor);</span><br><span class="line">[info.text drawAtPoint:CGPointMake(0, 0) withFont:font];</span><br><span class="line">#pragma clang pop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UIImage *image = [UIImage imageWithCGImage:UIGraphicsGetImageFromCurrentImageContext().CGImage scale:scale orientation:UIImageOrientationUp];</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line"></span><br><span class="line">return image;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li></ol><h5 id="3-具体使用方法"><a href="#3-具体使用方法" class="headerlink" title="3.具体使用方法"></a>3.具体使用方法</h5><p>1.在<code>AppDelegate.m</code>中，初始化iconfont<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;AppDelegate.h&quot;</span><br><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;ViewController.h&quot;</span><br><span class="line">@interface AppDelegate ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation AppDelegate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class="line">// Override point for customization after application launch.</span><br><span class="line">[TBCityIconFont setFontName:@&quot;iconfont&quot;];</span><br><span class="line">UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:[ViewController new]];</span><br><span class="line">self.window.rootViewController = nav;</span><br><span class="line">[self.window makeKeyAndVisible];</span><br><span class="line">return YES;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>在<code>ViewController.m</code>中实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;ViewController.h&quot;</span><br><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;UIImage+TBCityIconFont.h&quot;</span><br><span class="line">@interface ViewController ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation ViewController</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">[super viewDidLoad];</span><br><span class="line">self.view.backgroundColor = [UIColor  whiteColor];</span><br><span class="line">UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(100, 100, 30, 30)];</span><br><span class="line">[self.view addSubview:imageView];</span><br><span class="line">//图标编码是&amp;#xe600，需要转成\U0000e600</span><br><span class="line">imageView.image = [UIImage iconWithInfo:TBCityIconInfoMake(@&quot;\U0000e600&quot;, 30, [UIColor redColor])];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    button</span><br><span class="line">UIButton *button = [UIButton buttonWithType:UIButtonTypeSystem];</span><br><span class="line">button.frame = CGRectMake(100, 150, 40, 40);</span><br><span class="line">[self.view addSubview:button];</span><br><span class="line">[button setImage:[UIImage iconWithInfo:TBCityIconInfoMake(@&quot;\U0000e614&quot;, 40, [UIColor redColor])] forState:UIControlStateNormal];</span><br><span class="line"></span><br><span class="line">//    label,label可以将文字与图标结合一起，直接用label的text属性将图标显示出来</span><br><span class="line">UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(50, 200, 280, 40)];</span><br><span class="line">[self.view addSubview:label];</span><br><span class="line">label.font = [UIFont fontWithName:@&quot;iconfont&quot; size:15];//设置label的字体</span><br><span class="line">label.text = @&quot;在lable上显示  \U0000e658&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// Do any additional setup after loading the view, typically from a nib.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)didReceiveMemoryWarning &#123;</span><br><span class="line">[super didReceiveMemoryWarning];</span><br><span class="line">// Dispose of any resources that can be recreated.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li></ol><p>结果如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb988bfb497c?w=748&amp;h=1370&amp;f=jpeg&amp;s=28831" alt="显示结果"></p><blockquote><p>注意：</p><ol><li>所用到的unicode编码需要自己手动将&amp;#xXXXX格式转换成\UXXXXXXXX格式，例如//图标编码是&amp;#xe600，需要转成\U0000e600</li><li>所有需要的unicode编码都可以在下载的iconfont文件夹中的.html文件打开查看<br><img src="https://user-gold-cdn.xitu.io/2018/4/4/1628fb98b5f56ef5?w=1240&amp;h=753&amp;f=jpeg&amp;s=86665" alt="uiicode编码"></li></ol></blockquote><blockquote><p>本文<a href="https://github.com/chuzhaozhi/iconfontDemo" target="_blank" rel="noopener">demo</a>,欢迎批评指正，留下你的star哦。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-什么是iconfont&quot;&gt;&lt;a href=&quot;#1-什么是iconfont&quot; class=&quot;headerlink&quot; title=&quot;1.什么是iconfont&quot;&gt;&lt;/a&gt;1.什么是iconfont&lt;/h2&gt;&lt;blockquote class=&quot;blockquote
      
    
    </summary>
    
    
      <category term="ios" scheme="http://chuzhaozhi.cn/tags/ios/"/>
    
      <category term="iconfont" scheme="http://chuzhaozhi.cn/tags/iconfont/"/>
    
  </entry>
  
  <entry>
    <title>Charles抓包+Postman模拟请求</title>
    <link href="http://chuzhaozhi.cn/Charles%E6%8A%93%E5%8C%85+Postman%E6%A8%A1%E6%8B%9F%E8%AF%B7%E6%B1%82.html"/>
    <id>http://chuzhaozhi.cn/Charles抓包+Postman模拟请求.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-02T04:43:04.493Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、工具介绍"><a href="#一、工具介绍" class="headerlink" title="一、工具介绍"></a>一、工具介绍</h4><h5 id="1-Charles"><a href="#1-Charles" class="headerlink" title="1. Charles"></a>1. Charles</h5><p><blockquote class="blockquote-center"><br>今天来介绍一下Mac上抓包工具<a href="https://www.charlesproxy.com/" target="_blank" rel="noopener">Charles(又称为青花瓷)</a>，官网可以下载，但是需要破解之后才能永久使用，当然，可以有30天试用期，具体的使用方法在此就不进行一一介绍了，如有需要再补上。（ps:破解版<a href="https://pan.baidu.com/s/1pMawsEv" target="_blank" rel="noopener">下载地址</a>密码:meuk)。<br></blockquote><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4905848-fc2e807fca9adfe2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="charles.png"></p><h5 id="2-Postman"><a href="#2-Postman" class="headerlink" title="2.Postman"></a>2.Postman</h5><p>Postman是一种网页调试与发送网页http请求的chrome插件。我们可以用来很方便的模拟get或者post或者其他方式的请求来调试接口。<a href="https://app.getpostman.com/app/download/osx64" target="_blank" rel="noopener">点击下载</a><br><img src="http://upload-images.jianshu.io/upload_images/4905848-a010b13e92458678.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="postman.png"></p><h2 id="二、开始抓取网络接口以及模拟请求"><a href="#二、开始抓取网络接口以及模拟请求" class="headerlink" title="二、开始抓取网络接口以及模拟请求"></a>二、开始抓取网络接口以及模拟请求</h2><h5 id="第一步、打开Charles-在浏览器中输入需要请求的地址，我这里访问的是一个投票的接口"><a href="#第一步、打开Charles-在浏览器中输入需要请求的地址，我这里访问的是一个投票的接口" class="headerlink" title="第一步、打开Charles,在浏览器中输入需要请求的地址，我这里访问的是一个投票的接口"></a>第一步、打开Charles,在浏览器中输入需要请求的地址，我这里访问的是一个投票的接口</h5><h4 id="显示信息如下："><a href="#显示信息如下：" class="headerlink" title="显示信息如下："></a>显示信息如下：<img src="http://upload-images.jianshu.io/upload_images/4905848-1941e097e68ccc12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="headers.png"></h4><h4 id="cookie信息："><a href="#cookie信息：" class="headerlink" title="cookie信息："></a>cookie信息：<img src="http://upload-images.jianshu.io/upload_images/4905848-bac60fa4b21b0bfd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cookie.png"></h4><h4 id="参数信息："><a href="#参数信息：" class="headerlink" title="参数信息："></a>参数信息：</h4><p><img src="http://upload-images.jianshu.io/upload_images/4905848-64cc5a34eac55cb2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="参数.png"></p><h5 id="第二步、在第一步获取了请求的url、cookie、参数等请求需要的之后我们就可以打开Postman来进行模拟请求了。"><a href="#第二步、在第一步获取了请求的url、cookie、参数等请求需要的之后我们就可以打开Postman来进行模拟请求了。" class="headerlink" title="第二步、在第一步获取了请求的url、cookie、参数等请求需要的之后我们就可以打开Postman来进行模拟请求了。"></a>第二步、在第一步获取了请求的url、cookie、参数等请求需要的之后我们就可以打开Postman来进行模拟请求了。<img src="http://upload-images.jianshu.io/upload_images/4905848-eebf7859754b3cf4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="postman.png"></h5><h4 id="配置信息如下："><a href="#配置信息如下：" class="headerlink" title="配置信息如下："></a>配置信息如下：<img src="http://upload-images.jianshu.io/upload_images/4905848-a8ff62cecd37f3bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置信息.png"></h4><h4 id="body参数："><a href="#body参数：" class="headerlink" title="body参数："></a>body参数：<img src="http://upload-images.jianshu.io/upload_images/4905848-2c4f00b32aec26e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="body.png"></h4><h5 id="第三步、发送请求，看到后台返回的信息"><a href="#第三步、发送请求，看到后台返回的信息" class="headerlink" title="第三步、发送请求，看到后台返回的信息"></a>第三步、发送请求，看到后台返回的信息<img src="http://upload-images.jianshu.io/upload_images/4905848-84ebf0154dd6c623.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结果.png"></h5><p>到这里这个请求接口的操作就模拟成功了，既然参数和地址都有了，这个时候就是你想做什么就做什么的时候了，你懂得😆。<br><img src="http://upload-images.jianshu.io/upload_images/4905848-edfe3a61d514a92a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="app.png"></p><p>这是根据postman请求结果，自己随便写了个手机端来进行请求的，有兴趣的可以一起研究，欢迎骚扰。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、工具介绍&quot;&gt;&lt;a href=&quot;#一、工具介绍&quot; class=&quot;headerlink&quot; title=&quot;一、工具介绍&quot;&gt;&lt;/a&gt;一、工具介绍&lt;/h4&gt;&lt;h5 id=&quot;1-Charles&quot;&gt;&lt;a href=&quot;#1-Charles&quot; class=&quot;headerlink&quot; title=&quot;1. Charles&quot;&gt;&lt;/a&gt;1. Charles&lt;/h5&gt;&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;今天来介绍一下Mac上抓包工具&lt;a href=&quot;https://www.charlesproxy.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Charles(又称为青花瓷)&lt;/a&gt;，官网可以下载，但是需要破解之后才能永久使用，当然，可以有30天试用期，具体的使用方法在此就不进行一一介绍了，如有需要再补上。（ps:破解版&lt;a href=&quot;https://pan.baidu.com/s/1pMawsEv&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;密码:meuk)。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="IT技能" scheme="http://chuzhaozhi.cn/categories/IT%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="抓包" scheme="http://chuzhaozhi.cn/tags/%E6%8A%93%E5%8C%85/"/>
    
      <category term="Charles" scheme="http://chuzhaozhi.cn/tags/Charles/"/>
    
      <category term="Postman" scheme="http://chuzhaozhi.cn/tags/Postman/"/>
    
  </entry>
  
  <entry>
    <title>Reveal---iOS项目UI调试工具使用教程</title>
    <link href="http://chuzhaozhi.cn/Reveal---iOS%E9%A1%B9%E7%9B%AEUI%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html"/>
    <id>http://chuzhaozhi.cn/Reveal---iOS项目UI调试工具使用教程.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-02T12:26:53.394Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Reveal介绍"><a href="#一、Reveal介绍" class="headerlink" title="一、Reveal介绍"></a>一、Reveal介绍</h3><blockquote class="blockquote-center"><p><a href="https://www.waitsun.com/tag/reveal" target="_blank" rel="noopener">Reveal</a>是Mac os平台上的一款开发者调试IOS应用的Mac[开发软件]<br>reveal Mac版它能够在运行时调试和修改iOS应用程序。Reveal能连接到应用程序，并允许开发者编辑各种用户界面参数，这反过来会立即反应在程序的UI上。<br>Reveal 在 官网售价119美元，约合人民币1280元]，（文末会给出破解版的下载地址，当然，要支持正版哟^_^）。<br></p></blockquote><br><a id="more"></a><p></p><h3 id="二、Reveal集成使用"><a href="#二、Reveal集成使用" class="headerlink" title="二、Reveal集成使用"></a>二、Reveal集成使用</h3><h4 id="1、下载安装Reveal，直接安装。"><a href="#1、下载安装Reveal，直接安装。" class="headerlink" title="1、下载安装Reveal，直接安装。"></a>1、下载安装Reveal，直接安装。</h4><p>如果提示<code>xxx.app文件损坏打不开</code>，请参考我的另一篇<a href="http://chuzhaozhi.cn/2018/03/31/xxx-app%E6%96%87%E4%BB%B6%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%EF%BC%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#more">文章</a>解决，这里了就不多说了。</p><h4 id="2、找到你刚才安装的软件-打开"><a href="#2、找到你刚才安装的软件-打开" class="headerlink" title="2、找到你刚才安装的软件,打开"></a>2、找到你刚才安装的软件,打开</h4><p><img src="http://upload-images.jianshu.io/upload_images/4905848-9ef5178304ab70c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Reveal.png"><br>主界面显示如下图</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-5ab31e4993b225ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="主界面.png"></p><h4 id="3、在你的项目中集成"><a href="#3、在你的项目中集成" class="headerlink" title="3、在你的项目中集成"></a>3、在你的项目中集成</h4><p>（1）创建一个名为<code>RevealTestDemo</code>的项目,导入<code>CocoPods</code>,打开Podfile文件输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//  :configurations =&gt; [&apos;Debug&apos;] 只是在xcode debug 时才会加入；</span><br><span class="line">pod &apos;Reveal-SDK&apos;, :git =&gt; &apos;https://git.coding.net/kakukeme/Reveal-SDK.git&apos;, :configurations =&gt; [&apos;Debug&apos;]</span><br></pre></td></tr></table></figure></p><p>（2）、Xcode打开项目，并运行</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-ab5f4ccce6e06c37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开项目.png"><br>在界面上添加一个背景颜色为红色的label,这个时候打开Reveal,你就能看到<br><img src="http://upload-images.jianshu.io/upload_images/4905848-5080ff146bb62a15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Reveal.png"><br>点击进入就能看到</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-783e725d694cae8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="展示UI图层.png"></p><h4 id="4、功能分析"><a href="#4、功能分析" class="headerlink" title="4、功能分析"></a>4、功能分析</h4><p>窗口介绍<br><img src="http://upload-images.jianshu.io/upload_images/4905848-0ef67c408ccfb3ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="窗口.png"><br>点击一个控件之后进入这个子控件的详细信息</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-7aa0012133378bfc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Details.png"></p><p>在属性窗口里面我们能很清晰的看见这个控件的相关信息，包括Frame等，同时你还可以直接在属性面板进行修改控件的信息</p><p>修改前<br><img src="http://upload-images.jianshu.io/upload_images/4905848-7af86d070fd1633d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改前.png"><br>修改后</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-636e084f267ce18b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改后.png"><br>是不是很方便，修改字体、颜色、大小、对齐方式等都可以在属性面板进行操作，很直观的看到修改后的效果，不幸的是，你项目中的代码还需要自己去修改（据说后期版本会有对这一方面的修改，期待ing）。<a href="https://github.com/chuzhaozhi/RevealTestDemo" target="_blank" rel="noopener">本文Demo地址</a>,Reveal<a href="https://pan.baidu.com/s/1jHYekyM" target="_blank" rel="noopener">下载地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、Reveal介绍&quot;&gt;&lt;a href=&quot;#一、Reveal介绍&quot; class=&quot;headerlink&quot; title=&quot;一、Reveal介绍&quot;&gt;&lt;/a&gt;一、Reveal介绍&lt;/h3&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;

&lt;p&gt;&lt;a href=&quot;https://www.waitsun.com/tag/reveal&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Reveal&lt;/a&gt;是Mac os平台上的一款开发者调试IOS应用的Mac[开发软件]&lt;br&gt;reveal Mac版它能够在运行时调试和修改iOS应用程序。Reveal能连接到应用程序，并允许开发者编辑各种用户界面参数，这反过来会立即反应在程序的UI上。&lt;br&gt;Reveal 在 官网售价119美元，约合人民币1280元]，（文末会给出破解版的下载地址，当然，要支持正版哟^_^）。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UITableViewCell上的输入框，输入不同内容</title>
    <link href="http://chuzhaozhi.cn/UITableViewCell%E4%B8%8A%E7%9A%84%E8%BE%93%E5%85%A5%E6%A1%86%EF%BC%8C%E8%BE%93%E5%85%A5%E4%B8%8D%E5%90%8C%E5%86%85%E5%AE%B9.html"/>
    <id>http://chuzhaozhi.cn/UITableViewCell上的输入框，输入不同内容.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-02T03:21:27.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、实现效果"><a href="#一、实现效果" class="headerlink" title="一、实现效果"></a>一、实现效果</h2><p><blockquote class="blockquote-center"><br>本文介绍怎么在UITableViewCell中添加输入框，对于不同的row的输入框输入的文本进行获取以至于打到一个表单填写的效果。<br></blockquote><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4905848-fbff5f76b26f5be3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果图.png"></p><h2 id="二、项目结构"><a href="#二、项目结构" class="headerlink" title="二、项目结构"></a>二、项目结构</h2><p><img src="http://upload-images.jianshu.io/upload_images/4905848-89acd176adf2c7e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目结构图.png"></p><h2 id="三、代码部分"><a href="#三、代码部分" class="headerlink" title="三、代码部分"></a>三、代码部分</h2><h6 id="1-项目使用Cocoapods管理"><a href="#1-项目使用Cocoapods管理" class="headerlink" title="1. 项目使用Cocoapods管理"></a>1. 项目使用Cocoapods管理</h6><ul><li>在控制台对创建的项目进行创建pods，创建Podfile文件，使用命令vi Podfile进入到Podfile文件里面，按下键盘i进入编辑状态 </li></ul><p><img src="http://upload-images.jianshu.io/upload_images/4905848-897bd0685a5e2faf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Cocoapods.png"></p><ul><li>输入我们需要使用的第三方库，此项目中使用了Masonry来进行适配</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, &apos;8.0&apos;</span><br><span class="line">target &apos;InputInfoDemo&apos; do</span><br><span class="line">pod &apos;Masonry&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><ul><li>在写好上一步的代码后，按<code>ESC</code>,然后输入<code>:wq</code>回车退出编辑状态 </li></ul><p><img src="http://upload-images.jianshu.io/upload_images/4905848-afd2b0d254db2f83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="退出编辑.png"></p><ul><li>使用命令<code>pod instal</code>进行第三方库安装，当出现以下内容的时候表示你已经装好Masonry了<br>######2.创建需要显示的自定义UITableViewCell<br><code>**.h文件**</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  InputStrTableViewCell.h</span><br><span class="line">//</span><br><span class="line">//  Created by Jackeroo on 2017/5/27.</span><br><span class="line">//  Copyright © 2017年 Jackeroo. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line">@interface InputStrTableViewCell : UITableViewCell</span><br><span class="line">@property (nonatomic, strong) UITextField *textField;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 设置cell信息</span><br><span class="line"></span><br><span class="line"> @param title cell左侧标题</span><br><span class="line"> @param desc  占位文字信息</span><br><span class="line"> @param type 键盘类型  0、表示正常键盘 1、表示数字键盘</span><br><span class="line"> @param text 填充文字</span><br><span class="line"> @param textFieldBlock 输入内容回调</span><br><span class="line"> */</span><br><span class="line">-(void)setCellInfo:(NSString*)title withInputDesc:(NSString*)desc withKeybordType:(NSInteger )type withText:(NSString *)text WithReturnBlock:(void (^)(NSString *result))textFieldBlock;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li></ul><p><code>**.m文件**</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  InputStrTableViewCell.m</span><br><span class="line">//</span><br><span class="line">//  Created by Jackeroo on 2017/5/27.</span><br><span class="line">//  Copyright © 2017年 Jackeroo. All rights reserved.</span><br><span class="line">//</span><br><span class="line">//  颜色</span><br><span class="line">#define RGBA(r,g,b,a)     [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:a]</span><br><span class="line">#import &quot;InputStrTableViewCell.h&quot;</span><br><span class="line">#import &quot;Masonry.h&quot;</span><br><span class="line">#import &quot;View+MASShorthandAdditions.h&quot;</span><br><span class="line"></span><br><span class="line">@interface InputStrTableViewCell()&lt;UITextFieldDelegate&gt;</span><br><span class="line">//  标题Label</span><br><span class="line">@property (nonatomic, strong) UILabel *titleLabel;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation InputStrTableViewCell&#123;</span><br><span class="line">//  输入回调</span><br><span class="line">     void (^_block)(NSString *inputResult);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)awakeFromNib &#123;</span><br><span class="line">    [super awakeFromNib];</span><br><span class="line">    // Initialization code</span><br><span class="line">&#125;</span><br><span class="line">//  初始化</span><br><span class="line">- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier &#123;</span><br><span class="line">    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    if (self) &#123;</span><br><span class="line">        self.backgroundColor =RGBA(242, 242, 242, 1);</span><br><span class="line">        self.selectionStyle = UITableViewCellSelectionStyleNone;</span><br><span class="line">        self.titleLabel = [[UILabel alloc] init];</span><br><span class="line">        self.titleLabel.font =[UIFont systemFontOfSize:14];</span><br><span class="line">        self.titleLabel.textColor = [UIColor blackColor];</span><br><span class="line"></span><br><span class="line">        self.textField = [[UITextField alloc] init];</span><br><span class="line">        self.textField.font = [UIFont systemFontOfSize:12];</span><br><span class="line">        self.textField.textColor = [UIColor grayColor];</span><br><span class="line">        self.textField.textAlignment = NSTextAlignmentRight;</span><br><span class="line">        self.textField.delegate = self;</span><br><span class="line">        self.textField.backgroundColor = [UIColor whiteColor];</span><br><span class="line">        self.textField.clearButtonMode = UITextFieldViewModeAlways;</span><br><span class="line">        //  添加输入完成会回调通知</span><br><span class="line">          [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textFieldChanging:) name:UITextFieldTextDidChangeNotification object:self.textField];</span><br><span class="line">        [self addSubview];</span><br><span class="line">        [self autoLayout];</span><br><span class="line">        CGFloat scale = [[UIScreen mainScreen] scale];</span><br><span class="line">        CGFloat width = scale &gt; 0.0 ? 1.0 / scale : 1.0;</span><br><span class="line">        self.layer.borderWidth = width;</span><br><span class="line">        self.layer.borderColor = [UIColor lightGrayColor].CGColor;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)setFrame:(CGRect)frame</span><br><span class="line">&#123;</span><br><span class="line">    frame.origin.y -= 0.5;//整体向上 移动0.5</span><br><span class="line">    frame.size.height += 0.5;//间隔为0.5</span><br><span class="line">    [super setFrame:frame];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 添加页面</span><br><span class="line"> */</span><br><span class="line">-(void)addSubview&#123;</span><br><span class="line"></span><br><span class="line">    [self.contentView addSubview:self.titleLabel];</span><br><span class="line">    [self.contentView addSubview:self.textField];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 页面自动适配</span><br><span class="line"> */</span><br><span class="line">-(void) autoLayout&#123;</span><br><span class="line"></span><br><span class="line">    [self.titleLabel mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make.leading.offset(12.5);</span><br><span class="line">        make.centerY.equalTo(self.contentView.mas_centerY);</span><br><span class="line">        make.width.equalTo(@100);</span><br><span class="line">        make.trailing.equalTo(self.textField.mas_leading).offset(-10);</span><br><span class="line">    &#125;];</span><br><span class="line"></span><br><span class="line">    [self.textField mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make.centerY.equalTo(self.contentView.mas_centerY);</span><br><span class="line">        make.trailing.offset(-10);</span><br><span class="line">        make.leading.equalTo(self.titleLabel.mas_trailing).offset(10);</span><br><span class="line">        make.top.offset(10);</span><br><span class="line">        make.bottom.offset(-10);</span><br><span class="line">    &#125;];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">- (void)dealloc&#123;</span><br><span class="line">    [[NSNotificationCenter defaultCenter] removeObserver:self name:UITextFieldTextDidChangeNotification object:nil];</span><br><span class="line">&#125;</span><br><span class="line">-(void)textFieldChanging:(id)sender&#123;</span><br><span class="line">    if (_block) &#123;</span><br><span class="line">        _block(self.textField.text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">-(void)setCellInfo:(NSString*)title withInputDesc:(NSString*)desc withKeybordType:(NSInteger)type withText:(NSString *)text WithReturnBlock:(void (^)(NSString *))textFieldBlock&#123;</span><br><span class="line">    if (type==1) &#123;</span><br><span class="line">        self.textField.keyboardType = UIKeyboardTypeNumberPad;</span><br><span class="line">    &#125;</span><br><span class="line">        _textField.text =text;</span><br><span class="line">        _textField.clearButtonMode = UITextFieldViewModeWhileEditing;</span><br><span class="line">    _block = textFieldBlock;</span><br><span class="line">    _titleLabel.text = title;</span><br><span class="line">    _textField.placeholder = desc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)setSelected:(BOOL)selected animated:(BOOL)animated &#123;</span><br><span class="line">    [super setSelected:selected animated:animated];</span><br><span class="line"></span><br><span class="line">    // Configure the view for the selected state</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p><h6 id="3-创建一个Info对象模型，存入所填写的内容"><a href="#3-创建一个Info对象模型，存入所填写的内容" class="headerlink" title="3.创建一个Info对象模型，存入所填写的内容"></a>3.创建一个Info对象模型，存入所填写的内容</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface Info : NSObject</span><br><span class="line">@property (nonatomic,copy) NSString *name1;</span><br><span class="line">@property (nonatomic,copy) NSString *name2;</span><br><span class="line">@property (nonatomic,copy) NSString *name3;</span><br><span class="line">@property (nonatomic,copy) NSString *name4;</span><br><span class="line">@property (nonatomic,copy) NSString *name5;</span><br><span class="line">@property (nonatomic,copy) NSString *name6;</span><br><span class="line">@property (nonatomic,copy) NSString *name7;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h6 id="4-使用方法"><a href="#4-使用方法" class="headerlink" title="4.使用方法"></a>4.使用方法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath&#123;</span><br><span class="line">      NSString  *identifier = [NSString stringWithFormat:@&quot;InputStrTableViewCellIdentifier%ld&quot;,indexPath.row];</span><br><span class="line">    InputStrTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];</span><br><span class="line">    if (!cell) &#123;</span><br><span class="line">        cell =[[InputStrTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];</span><br><span class="line">        Info *info = [[Info alloc] init];</span><br><span class="line">        if (indexPath.row==0) &#123;</span><br><span class="line">            [cell setCellInfo:@&quot;配偶信息：&quot; withInputDesc:info.name1&gt;0?info.name1:@&quot;请输入配偶信息&quot; withKeybordType:0 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name1 =result;</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;else if (indexPath.row==1)&#123;</span><br><span class="line">            [cell setCellInfo:@&quot;身份证：&quot; withInputDesc:info.name2&gt;0?info.name2:@&quot;请输入身份证号码&quot; withKeybordType:1 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name2 =result;</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;else if (indexPath.row==2)&#123;</span><br><span class="line">            [cell setCellInfo:@&quot;单位名称：&quot; withInputDesc:info.name3&gt;0?info.name3:@&quot;请输入单位名称&quot; withKeybordType:0 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name3 =result;</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;else if (indexPath.row==3)&#123;</span><br><span class="line">            [cell setCellInfo:@&quot;所在部门：&quot; withInputDesc:info.name4&gt;0?info.name4:@&quot;请输入所在部门&quot; withKeybordType:0 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name4 =result;</span><br><span class="line">            &#125;];</span><br><span class="line"></span><br><span class="line">        &#125;else if (indexPath.row==4)&#123;</span><br><span class="line">            [cell setCellInfo:@&quot;月均工资收入：&quot; withInputDesc:info.name5&gt;0?info.name5:@&quot;请输入月均工资收入&quot; withKeybordType:1 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name5 =result;</span><br><span class="line">            &#125;];</span><br><span class="line"></span><br><span class="line">        &#125;else if (indexPath.row==5)&#123;</span><br><span class="line">            [cell setCellInfo:@&quot;办公室电话：&quot; withInputDesc:info.name6&gt;0?info.name6:@&quot;请输入办公室电话&quot; withKeybordType:1 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name6 =result;</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            [cell setCellInfo:@&quot;移动电话：&quot; withInputDesc:info.name7&gt;0?info.name1:@&quot;请输入移动电话&quot; withKeybordType:1 withText:@&quot;&quot; WithReturnBlock:^(NSString *result) &#123;</span><br><span class="line">                info.name7 =result;</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：只是粗糙的实现了功能，还有部分可优化的，代码已上传Github,喜欢的欢迎star一下，以资鼓励，嘿嘿，<a href="https://github.com/chuzhaozhi/InputInfoDemo/tree/master" target="_blank" rel="noopener"> git地址 </a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、实现效果&quot;&gt;&lt;a href=&quot;#一、实现效果&quot; class=&quot;headerlink&quot; title=&quot;一、实现效果&quot;&gt;&lt;/a&gt;一、实现效果&lt;/h2&gt;&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;本文介绍怎么在UITableViewCell中添加输入框，对于不同的row的输入框输入的文本进行获取以至于打到一个表单填写的效果。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="UITableView" scheme="http://chuzhaozhi.cn/tags/UITableView/"/>
    
      <category term="Cocoapods" scheme="http://chuzhaozhi.cn/tags/Cocoapods/"/>
    
      <category term="cell" scheme="http://chuzhaozhi.cn/tags/cell/"/>
    
      <category term="git" scheme="http://chuzhaozhi.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>UITableViewCell高度自适应--Xib和Masonry布局</title>
    <link href="http://chuzhaozhi.cn/UITableViewCell%E9%AB%98%E5%BA%A6%E8%87%AA%E9%80%82%E5%BA%94--Xib%E5%92%8CMasonry%E5%B8%83%E5%B1%80.html"/>
    <id>http://chuzhaozhi.cn/UITableViewCell高度自适应--Xib和Masonry布局.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-03-31T14:56:36.502Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS微信支付以及工具类</title>
    <link href="http://chuzhaozhi.cn/WeiXinPayService.html"/>
    <id>http://chuzhaozhi.cn/WeiXinPayService.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-17T12:24:12.485Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br>在刚刚结束的一个项目中用到了微信支付，从接入微信支付到工具类的封装，在本文中做个积累，方便日后使用。<br></blockquote><br><a id="more"></a></p><h2 id="1-开始接入微信支付的准备工作"><a href="#1-开始接入微信支付的准备工作" class="headerlink" title="1.开始接入微信支付的准备工作"></a>1.开始接入微信支付的准备工作</h2><p><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5deef9ccd64?w=700&amp;h=226&amp;f=png&amp;s=89227" alt="接入流程.png"></p><p>首先你需要去<a href="https://open.weixin.qq.com/" target="_blank" rel="noopener">微信开放平台</a>注册账号,在这里要吐槽一下，不知道这个微信平台的账号密码验证机制，忘了以前的密码，重新登录，各种找回密码都不行，实在没辙，去注册个Gmail😑，登录成功后，可以看到如下界面。<br><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5deef8f0630?w=1240&amp;h=299&amp;f=jpeg&amp;s=22223" alt="1.png"></p><p>点击右上角的创建移动应用，一步一步填写必要填入的信息，在这里就不做多余的赘述了。<br>需要注意的是这里填入的<br>Bundle ID需要和项目的一一对应<br><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5deef7c4285?w=1240&amp;h=685&amp;f=jpeg&amp;s=50365" alt="BoundleId"><br>接下来就等一个星期左右，等待微信审核通过你就可以将微信支付SDK集成到项目中，详情可以看官方给出的<a href="https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=1417694084&amp;token=&amp;lang=zh_CN" target="_blank" rel="noopener">文档</a>.<br>pod 集成方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;WechatOpenSDK&apos;</span><br></pre></td></tr></table></figure></p><p>在Xcode中，选择你的工程设置项，选中“TARGETS”一栏，在“info”标签栏的“URL type“添加“URL scheme”为你所注册的应用程序id（如下图所示）。<br><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5deefa04e0d?w=1240&amp;h=355&amp;f=jpeg&amp;s=38183" alt="URL scheme"></p><p>完成之后可以获取到appid(微信开放平台为应用生成的唯一识别码)、商户id、商户secretKey。对于app端来说只用到appid，商户id最好通过接口从server获取，商户secretKey是用来签名的，一般只有server能用到。</p><h2 id="2-支付流程"><a href="#2-支付流程" class="headerlink" title="2.支付流程"></a>2.支付流程</h2><p><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5def1793359?w=894&amp;h=1042&amp;f=png&amp;s=35742" alt="支付流程.png"></p><p>刚开始看这个流程图可能会觉得很复杂，所以总结了我们比较关系的流程是：</p><ol><li>app客户端向服务器发送支付请求</li><li>服务器在收到客户端请求之后向微信后台调用统一下单API,获得预付单信息</li><li>服务端生成带签名的客户端支付信息给app</li><li>app客户端用户确认支付，app唤醒微信客户端进行支付</li><li>app获得支付结果后向服务端查询最终的结果并显示</li></ol><h5 id="app端的工作："><a href="#app端的工作：" class="headerlink" title="app端的工作："></a>app端的工作：</h5><ul><li>接入微信支付SDK</li><li>向服务器发送支付请求</li><li>支付信息唤醒微信app,然后进行支付</li><li>收到微信支付回调后向服务器确认支付结果</li><li>根据查询结果展示结果页面告知用户支付结果</li></ul><h5 id="服务器端的工作："><a href="#服务器端的工作：" class="headerlink" title="服务器端的工作："></a>服务器端的工作：</h5><ul><li>收到app客户端支付请求后向微信后台请求预支付订单</li><li>服务器端签名并返回信息给app客户端</li><li>接收微信后台返回的支付结果，用来app端查询</li></ul><blockquote><p>服务器端返回的字段说明：</p><blockquote></blockquote><ul><li>appId:返回的appid</li><li>partnerId: 父级id</li><li>prepayId: 支付id</li><li>packages: 包名（微信默认的为“Sign=WXPay”）</li><li>nonceStr: 生成的随机字符串</li><li>timesTamp: 时间戳</li><li>sign: 签名<br><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5deef9724d9?w=1240&amp;h=599&amp;f=jpeg&amp;s=89869" alt="字段说明"> </li></ul></blockquote><h2 id="3-iOS端使用"><a href="#3-iOS端使用" class="headerlink" title="3.iOS端使用"></a>3.iOS端使用</h2><p>在<code>AppDelegate.m</code>,导入微信SDK头文件<code>WXApi.h</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class="line">[WXApi registerApp:@&quot;注册获得的appid&quot;];//注册appid</span><br><span class="line">return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//支持所有iOS系统回调</span><br><span class="line">- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation</span><br><span class="line">&#123;</span><br><span class="line">//    [self handleOpenURL:url];</span><br><span class="line">BOOL result = [[UMSocialManager defaultManager] handleOpenURL:url sourceApplication:sourceApplication annotation:annotation];</span><br><span class="line">if (!result) &#123;</span><br><span class="line">// 其他如支付等SDK的回调</span><br><span class="line">[self handleOpenURL:url];</span><br><span class="line">&#125;</span><br><span class="line">return YES;</span><br><span class="line">&#125;</span><br><span class="line">- (void)handleOpenURL:(NSURL*)url &#123;</span><br><span class="line">if ([url.host isEqualToString:@&quot;pay&quot;]) &#123; // -- 微信支付</span><br><span class="line">[WXApi handleOpenURL:url delegate:[WXPayService sharedInstance]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>此处的<code>WXPayService</code>就是自己单独抽出来写的一个类，遵循<code>WXApiManagerDelegate</code>协议</p></blockquote><h5 id="WXPayService-h"><a href="#WXPayService-h" class="headerlink" title="WXPayService.h"></a>WXPayService.h</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &quot;WXApi.h&quot;</span><br><span class="line">@interface WXPayService : NSObject &lt;WXApiDelegate&gt;</span><br><span class="line">///单例来接收微信请求的回调</span><br><span class="line">+ (instancetype)sharedInstance;</span><br><span class="line">// -- 根据接口返回的预支付信息,构造支付请求</span><br><span class="line">+ (PayReq *)getPayRequest:(NSDictionary *)prepayData;</span><br><span class="line"></span><br><span class="line">///处理非支付请求的回调</span><br><span class="line">- (void)onRespCallBack:(void(^)(BaseResp * resp))callback;</span><br><span class="line">///从服务器端获取到微信返回的支付请求用到的参数来发起支付请求</span><br><span class="line">- (void)startPayWithReq:(PayReq *)req callback:(void(^)(BaseResp * resp))callback; </span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h5 id="WXPayService-m"><a href="#WXPayService-m" class="headerlink" title="WXPayService.m"></a>WXPayService.m</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#import &quot;WXPayService.h&quot;</span><br><span class="line">@interface WXPayService ()</span><br><span class="line">@property (nonatomic,copy) void(^RespCallBack)(BaseResp *);</span><br><span class="line">@end</span><br><span class="line">static WXPayService *sharedInstance;</span><br><span class="line"></span><br><span class="line">@implementation WXPayService</span><br><span class="line">+ (instancetype)allocWithZone:(struct _NSZone *)zone&#123;</span><br><span class="line">static dispatch_once_t onceToken;</span><br><span class="line">dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">sharedInstance = [super allocWithZone:zone];</span><br><span class="line">&#125;);</span><br><span class="line">return sharedInstance;</span><br><span class="line">&#125;</span><br><span class="line">///单例来接收微信请求的回调</span><br><span class="line">+ (instancetype)sharedInstance &#123;</span><br><span class="line">static dispatch_once_t onceToken;</span><br><span class="line">dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">sharedInstance = [[self alloc] init];</span><br><span class="line">&#125;);</span><br><span class="line">return sharedInstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// -- 根据接口返回的预支付信息,构造支付请求</span><br><span class="line">+ (PayReq *)getPayRequest:(NSDictionary *)prepayData &#123;</span><br><span class="line">if (prepayData) &#123;</span><br><span class="line">//  此处Tools是自己的另一个工具类，用来判断字典的</span><br><span class="line">PayReq *req = [[PayReq alloc] init];</span><br><span class="line">if ([Tools dicContain:prepayData withKey:@&quot;partnerid&quot;]) &#123;</span><br><span class="line">req.partnerId = prepayData[@&quot;partnerid&quot;];</span><br><span class="line">&#125;</span><br><span class="line">if ([Tools dicContain:prepayData withKey:@&quot;prepayid&quot;]) &#123;</span><br><span class="line">req.prepayId = prepayData[@&quot;prepayid&quot;];</span><br><span class="line">&#125;</span><br><span class="line">if ([Tools dicContain:prepayData withKey:@&quot;noncestr&quot;]) &#123;</span><br><span class="line">req.nonceStr = prepayData[@&quot;noncestr&quot;];</span><br><span class="line">&#125;</span><br><span class="line">if ([Tools dicContain:prepayData withKey:@&quot;timestamp&quot;]) &#123;</span><br><span class="line">req.timeStamp = [prepayData[@&quot;timestamp&quot;] intValue];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req.package =@&quot;Sign=WXPay&quot;;</span><br><span class="line">req.sign =  @&quot;null&quot;;</span><br><span class="line">//日志输出</span><br><span class="line">NSLog(@&quot;appid=%@/npartid=%@/nprepayid=%@/nnoncestr=%@/ntimestamp=%ld/npackage=%@/nsign=%@&quot;,[prepayData objectForKey:@&quot;appid&quot;],req.partnerId,req.prepayId,req.nonceStr,(long)req.timeStamp,req.package,req.sign);</span><br><span class="line">return req;</span><br><span class="line">&#125;</span><br><span class="line">return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">///处理非支付请求的回调</span><br><span class="line">- (void)onRespCallBack:(void(^)(BaseResp * resp))callback &#123;</span><br><span class="line">self.RespCallBack = callback;</span><br><span class="line">&#125;</span><br><span class="line">///从服务器端获取到微信返回的支付请求用到的参数来发起支付请求</span><br><span class="line">- (void)startPayWithReq:(PayReq *)req callback:(void(^)(BaseResp * resp))callback &#123;</span><br><span class="line">NSAssert(req !=nil , @&quot;未成功创建微信支付请求&quot;);</span><br><span class="line">self.RespCallBack = callback;</span><br><span class="line">if ([WXApi isWXAppInstalled]) &#123; // -- 判断是否安装微信应用</span><br><span class="line">//发起微信支付,设置参数</span><br><span class="line">[WXApi sendReq:req];</span><br><span class="line">&#125;else &#123;</span><br><span class="line">self.RespCallBack(nil);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark WXApiDelegate</span><br><span class="line">- (void)onResp:(BaseResp *)resp &#123;</span><br><span class="line">if ([resp isKindOfClass:[PayResp class]]) &#123; // -- 判断是否为支付的回调</span><br><span class="line">self.RespCallBack(resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>在需要支付的ViewController中导入工具类<code>WXPayService</code><br><img src="https://user-gold-cdn.xitu.io/2018/4/3/1628a5df0fd34ad6?w=1240&amp;h=695&amp;f=jpeg&amp;s=97948" alt="pay.png"></p><h2 id="4-注意点及问题"><a href="#4-注意点及问题" class="headerlink" title="4.注意点及问题"></a>4.注意点及问题</h2><h4 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h4><ul><li>设置好scheme,否则应用无法跳转到微信客户端</li><li>支付签名时的key值全部是小写的</li><li>如果支付显示验证签名失败<br>的时候，可以将packages设为默认值(Sign=WXPay)试试</li></ul><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><blockquote><p>系统版本大于等于iOS9的，调起微信客户端之后，可以直接点击状态栏左侧按钮返回，这时是不走回调方法的。</p></blockquote><p>解决方案：<br>在AppDelegate.m的applicationWillEnterForeground方法中，调用查询支付结果接口然后刷新当然页面。需要设置bool变量作为标志，否则每次应用进入前台都去查询，就不符合业务要求了。</p><blockquote><p>进入微信支付页面之后，不做操作，切换到自己应用中，退出当前支付页面，然后再进入微信客户端点击支付或者取消，此时自己的应用会崩溃闪退</p></blockquote><p>原因：退出页面后页面已经出栈被销毁，但wx回调时还是去调用其中的代理方法，就会出现野指针。<br>解决方案：在页面的<code>viewWillDisappear</code>方法中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[WXPayService sharedManager].delegate = nil;</span><br></pre></td></tr></table></figure></p><h2 id="5-结束语"><a href="#5-结束语" class="headerlink" title="5.结束语"></a>5.结束语</h2><p>微信支付签名建议和服务端协商做二次签名，以保证支付的安全性。<br>ps: 如有不对的地方，欢迎批评指正，另外安利一下个人的<a href="http://www.chuzhaozhi.cn" target="_blank" rel="noopener">博客</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;在刚刚结束的一个项目中用到了微信支付，从接入微信支付到工具类的封装，在本文中做个积累，方便日后使用。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Xcode9-Safe-Area-Layout-Guide-Before-iOS9-0报错解决</title>
    <link href="http://chuzhaozhi.cn/Xcode9-Safe-Area-Layout-Guide-Before-iOS9-0%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3.html"/>
    <id>http://chuzhaozhi.cn/Xcode9-Safe-Area-Layout-Guide-Before-iOS9-0报错解决.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-02T04:44:09.297Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br> 9月20日苹果爸爸推送了iOS11.0以及Xcode9,作为开发小白一枚，第一时间更新了Xcode9,去体验一下所谓的跨时代的iPhone X,像往常新建个新项目，结果一运行直接报错<br></blockquote><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4905848-a869700e765c7aa9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="问题一.png"><br>（弱弱的说一句，这个xcode9好像并没有那么友好~）<br>然后一Google，苹果爸爸在苹果在iOS7中引入的Top Layout Guide和Bottom Layout Guide,这些布局指南在iOS 11中被弃用，取而代之的是Safe Area Layout Guide.<br>针对新特性，解决方案如下<br>第一步、在项目报错地方打开右边工具栏找到如图位置选中<code>View Controller</code>，去掉<code>Use Safe Area Layout Guides</code><br><img src="http://upload-images.jianshu.io/upload_images/4905848-822db122e4b09814.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解决一.png"><br> 第二步、切换到<code>Main.storyboard</code>文件,重读第一步操作打开右边工具栏找到如图位置选中<code>View Controller</code>，去掉<code>Use Safe Area Layout Guides</code></p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-20c763e7c4ee3077.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解决一2.png"></p><h3 id="到这就解决了这个问题，当然iOS11和Xcode9还有其他新特性，一点点整理解决。"><a href="#到这就解决了这个问题，当然iOS11和Xcode9还有其他新特性，一点点整理解决。" class="headerlink" title="到这就解决了这个问题，当然iOS11和Xcode9还有其他新特性，一点点整理解决。"></a>到这就解决了这个问题，当然iOS11和Xcode9还有其他新特性，一点点整理解决。</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt; 9月20日苹果爸爸推送了iOS11.0以及Xcode9,作为开发小白一枚，第一时间更新了Xcode9,去体验一下所谓的跨时代的iPhone X,像往常新建个新项目，结果一运行直接报错&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Xcode" scheme="http://chuzhaozhi.cn/categories/Xcode/"/>
    
    
      <category term="Xcode" scheme="http://chuzhaozhi.cn/tags/Xcode/"/>
    
      <category term="自适应" scheme="http://chuzhaozhi.cn/tags/%E8%87%AA%E9%80%82%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>iOS上如何使用Iconfont图标</title>
    <link href="http://chuzhaozhi.cn/iOS%E4%B8%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Iconfont%E5%9B%BE%E6%A0%87.html"/>
    <id>http://chuzhaozhi.cn/iOS上如何使用Iconfont图标.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-17T12:23:26.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是iconfont"><a href="#1-什么是iconfont" class="headerlink" title="1.什么是iconfont"></a>1.什么是iconfont</h2><p><blockquote class="blockquote-center"><br>&ensp;&ensp;&ensp;&ensp;iconFont拆开来看，就是 Icon + Font，这样估计大家应该都能理解是什么，那两者结合是什么呢？没错！就是 IconFont ！让开发者像使用字体一样使用图标。如果自己不会做的话，可以直接去阿里的<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">iconfont图标库</a>下载自己需要的图标。<br></blockquote><br><a id="more"></a></p><h2 id="2-为什么要使用iconfont"><a href="#2-为什么要使用iconfont" class="headerlink" title="2.为什么要使用iconfont"></a>2.为什么要使用iconfont</h2><p>&ensp;&ensp;&ensp;&ensp;在开发项目时，不可避免的会用到各种图标，为了适配不同的设备，通常需要@2x和@3x两套图，例如说我们tabBar上使用的图标。有些app有换肤的需要，还需要多套不同的图来进行匹配不同的主题。如果使用切图，这对于设计和开发来说无疑是增加了工作量，而且ipa的体积也会增大。</p><p>使用iconfont的好处:</p><ol><li>减小ipa包的大小</li><li>图标保真缩放，多设备适配一套图解决问题</li><li>适应换肤要求，使用方便。</li></ol><h2 id="3-怎么用iconfont"><a href="#3-怎么用iconfont" class="headerlink" title="3.怎么用iconfont"></a>3.怎么用iconfont</h2><h6 id="1-首先去iconfont图标库下载自己需要的图标。"><a href="#1-首先去iconfont图标库下载自己需要的图标。" class="headerlink" title="1. 首先去iconfont图标库下载自己需要的图标。"></a>1. 首先去<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">iconfont图标库</a>下载自己需要的图标。</h6><blockquote><p>简书里竟然gif大小限制的这么厉害，所以将动图放到项目里了，需要的在文末有git地址</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/4905848-ad30252adacc7b4d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="iconfont.jpg"></p><p>如图我们可以选择自己需要的icon加入到购物车，然后加入项目里，当然你也可以直接在购物车直接下载，但是这样只是没有修改icon为自己想要的样式，加入项目中，你可以自己任意修改icon为自己想要的样式。<br><img src="https://upload-images.jianshu.io/upload_images/4905848-dcc9e333794eed95.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="05.jpeg"></p><blockquote><p>注意：这里是下载代码，这样我们就可以在项目中直接使用</p></blockquote><h6 id="2-将下载下来的icon资源添加到自己的项目中。"><a href="#2-将下载下来的icon资源添加到自己的项目中。" class="headerlink" title="2.将下载下来的icon资源添加到自己的项目中。"></a>2.将下载下来的icon资源添加到自己的项目中。</h6><p><img src="https://upload-images.jianshu.io/upload_images/4905848-d757e7546867727f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="04.jpeg"></p><p>我们所需要的就是这个iconfont.ttf，对于这个ttf文件，我想我们并不陌生吧。新建项目，将这个ttf文件拖入自己的项目里。<br><img src="https://upload-images.jianshu.io/upload_images/4905848-ca0417dc33bf44c5.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="03.jpeg"></p><blockquote><p>注意：勾选如图选项</p></blockquote><p>接下来配置项目加载这个文件</p><ul><li><p>检查文件是否在项目中，不然会崩溃<br><img src="https://upload-images.jianshu.io/upload_images/4905848-8f3641219da29dc1.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="02.jpeg"></p></li><li><p>在plist文件中加入字体<br><img src="https://upload-images.jianshu.io/upload_images/4905848-e7900ea43914de15.png" alt="plist.png"></p></li></ul><p>接下来我们借助淘点点科技写的一个关于iconfont封装，方便我们使用iconfont。iconfont的封装包括<br><img src="http://upload-images.jianshu.io/upload_images/4905848-1c8057e4c46d97b4.jpg" alt="工具类"></p><ol><li><p><code>TBCityIconInfo.h</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line"></span><br><span class="line">@interface TBCityIconInfo : NSObject</span><br><span class="line"></span><br><span class="line">@property (nonatomic, strong) NSString *text;</span><br><span class="line">@property (nonatomic, assign) NSInteger size;</span><br><span class="line">@property (nonatomic, strong) UIColor *color;</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color;</span><br><span class="line">+ (instancetype)iconInfoWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>TBCityIconInfo.m</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;TBCityIconInfo.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation TBCityIconInfo</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color &#123;</span><br><span class="line">if (self = [super init]) &#123;</span><br><span class="line">self.text = text;</span><br><span class="line">self.size = size;</span><br><span class="line">self.color = color;</span><br><span class="line">&#125;</span><br><span class="line">return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (instancetype)iconInfoWithText:(NSString *)text size:(NSInteger)size color:(UIColor *)color &#123;</span><br><span class="line">return [[TBCityIconInfo alloc] initWithText:text size:size color:color];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>TBCityIconFont.h</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;UIImage+TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;TBCityIconInfo.h&quot;</span><br><span class="line"></span><br><span class="line">#define TBCityIconInfoMake(text, imageSize, imageColor) [TBCityIconInfo iconInfoWithText:text size:imageSize color:imageColor]</span><br><span class="line"></span><br><span class="line">@interface TBCityIconFont : NSObject</span><br><span class="line"></span><br><span class="line">+ (UIFont *)fontWithSize: (CGFloat)size;</span><br><span class="line">+ (void)setFontName:(NSString *)fontName;</span><br></pre></td></tr></table></figure></li><li><p><code>TBCityIconFont.m</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &lt;CoreText/CoreText.h&gt;</span><br><span class="line"></span><br><span class="line">@implementation TBCityIconFont</span><br><span class="line"></span><br><span class="line">static NSString *_fontName;</span><br><span class="line"></span><br><span class="line">+ (void)registerFontWithURL:(NSURL *)url &#123;</span><br><span class="line">NSAssert([[NSFileManager defaultManager] fileExistsAtPath:[url path]], @&quot;Font file doesn&apos;t exist&quot;);</span><br><span class="line">CGDataProviderRef fontDataProvider = CGDataProviderCreateWithURL((__bridge CFURLRef)url);</span><br><span class="line">CGFontRef newFont = CGFontCreateWithDataProvider(fontDataProvider);</span><br><span class="line">CGDataProviderRelease(fontDataProvider);</span><br><span class="line">CTFontManagerRegisterGraphicsFont(newFont, nil);</span><br><span class="line">CGFontRelease(newFont);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (UIFont *)fontWithSize:(CGFloat)size &#123;</span><br><span class="line">UIFont *font = [UIFont fontWithName:[self fontName] size:size];</span><br><span class="line">if (font == nil) &#123;</span><br><span class="line">NSURL *fontFileUrl = [[NSBundle mainBundle] URLForResource:[self fontName] withExtension:@&quot;ttf&quot;];</span><br><span class="line">[self registerFontWithURL: fontFileUrl];</span><br><span class="line">font = [UIFont fontWithName:[self fontName] size:size];</span><br><span class="line">NSAssert(font, @&quot;UIFont object should not be nil, check if the font file is added to the application bundle and you&apos;re using the correct font name.&quot;);</span><br><span class="line">&#125;</span><br><span class="line">return font;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (void)setFontName:(NSString *)fontName &#123;</span><br><span class="line">_fontName = fontName;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ (NSString *)fontName &#123;</span><br><span class="line">return _fontName ? : @&quot;iconfont&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>UIImage+TBCityIconFont.h</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line">#import &quot;TBCityIconInfo.h&quot;</span><br><span class="line"></span><br><span class="line">@interface UIImage (TBCityIconFont)</span><br><span class="line"></span><br><span class="line">+ (UIImage *)iconWithInfo:(TBCityIconInfo *)info;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li><li><p><code>UIImage+TBCityIconFont.m</code>的实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;UIImage+TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &lt;CoreText/CoreText.h&gt;</span><br><span class="line"></span><br><span class="line">@implementation UIImage (TBCityIconFont)</span><br><span class="line"></span><br><span class="line">+ (UIImage *)iconWithInfo:(TBCityIconInfo *)info &#123;</span><br><span class="line">CGFloat size = info.size;</span><br><span class="line">CGFloat scale = [UIScreen mainScreen].scale;</span><br><span class="line">CGFloat realSize = size * scale;</span><br><span class="line">UIFont *font = [TBCityIconFont fontWithSize:realSize];</span><br><span class="line">UIGraphicsBeginImageContext(CGSizeMake(realSize, realSize));</span><br><span class="line">CGContextRef context = UIGraphicsGetCurrentContext();</span><br><span class="line"></span><br><span class="line">if ([info.text respondsToSelector:@selector(drawAtPoint:withAttributes:)]) &#123;</span><br><span class="line">/**</span><br><span class="line">* 如果这里抛出异常，请打开断点列表，右击All Exceptions -&gt; Edit Breakpoint -&gt; All修改为Objective-C</span><br><span class="line">* See: http://stackoverflow.com/questions/1163981/how-to-add-a-breakpoint-to-objc-exception-throw/14767076#14767076</span><br><span class="line">*/</span><br><span class="line">[info.text drawAtPoint:CGPointZero withAttributes:@&#123;NSFontAttributeName:font, NSForegroundColorAttributeName: info.color&#125;];</span><br><span class="line">&#125; else &#123;</span><br><span class="line"></span><br><span class="line">#pragma clang diagnostic push</span><br><span class="line">#pragma clang diagnostic ignored &quot;-Wdeprecated-declarations&quot;</span><br><span class="line">CGContextSetFillColorWithColor(context, info.color.CGColor);</span><br><span class="line">[info.text drawAtPoint:CGPointMake(0, 0) withFont:font];</span><br><span class="line">#pragma clang pop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UIImage *image = [UIImage imageWithCGImage:UIGraphicsGetImageFromCurrentImageContext().CGImage scale:scale orientation:UIImageOrientationUp];</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line"></span><br><span class="line">return image;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li></ol><h5 id="3-具体使用方法"><a href="#3-具体使用方法" class="headerlink" title="3.具体使用方法"></a>3.具体使用方法</h5><p>1.在<code>AppDelegate.m</code>中，初始化iconfont<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;AppDelegate.h&quot;</span><br><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;ViewController.h&quot;</span><br><span class="line">@interface AppDelegate ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation AppDelegate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class="line">// Override point for customization after application launch.</span><br><span class="line">[TBCityIconFont setFontName:@&quot;iconfont&quot;];</span><br><span class="line">UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:[ViewController new]];</span><br><span class="line">self.window.rootViewController = nav;</span><br><span class="line">[self.window makeKeyAndVisible];</span><br><span class="line">return YES;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>在<code>ViewController.m</code>中实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;ViewController.h&quot;</span><br><span class="line">#import &quot;TBCityIconFont.h&quot;</span><br><span class="line">#import &quot;UIImage+TBCityIconFont.h&quot;</span><br><span class="line">@interface ViewController ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation ViewController</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">[super viewDidLoad];</span><br><span class="line">self.view.backgroundColor = [UIColor  whiteColor];</span><br><span class="line">UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(100, 100, 30, 30)];</span><br><span class="line">[self.view addSubview:imageView];</span><br><span class="line">//图标编码是&amp;#xe600，需要转成\U0000e600</span><br><span class="line">imageView.image = [UIImage iconWithInfo:TBCityIconInfoMake(@&quot;\U0000e600&quot;, 30, [UIColor redColor])];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    button</span><br><span class="line">UIButton *button = [UIButton buttonWithType:UIButtonTypeSystem];</span><br><span class="line">button.frame = CGRectMake(100, 150, 40, 40);</span><br><span class="line">[self.view addSubview:button];</span><br><span class="line">[button setImage:[UIImage iconWithInfo:TBCityIconInfoMake(@&quot;\U0000e614&quot;, 40, [UIColor redColor])] forState:UIControlStateNormal];</span><br><span class="line"></span><br><span class="line">//    label,label可以将文字与图标结合一起，直接用label的text属性将图标显示出来</span><br><span class="line">UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(50, 200, 280, 40)];</span><br><span class="line">[self.view addSubview:label];</span><br><span class="line">label.font = [UIFont fontWithName:@&quot;iconfont&quot; size:15];//设置label的字体</span><br><span class="line">label.text = @&quot;在lable上显示  \U0000e658&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// Do any additional setup after loading the view, typically from a nib.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)didReceiveMemoryWarning &#123;</span><br><span class="line">[super didReceiveMemoryWarning];</span><br><span class="line">// Dispose of any resources that can be recreated.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></li></ol><p>结果如下图所示：<br><img src="https://upload-images.jianshu.io/upload_images/4905848-2b9835a5a6ca05bc.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="01.jpeg"></p><blockquote><p>注意：</p><ol><li>所用到的unicode编码需要自己手动将&amp;#xXXXX格式转换成\UXXXXXXXX格式，例如//图标编码是&amp;#xe600，需要转成\U0000e600</li><li>所有需要的unicode编码都可以在下载的iconfont文件夹中的.html文件打开查看<br><img src="https://upload-images.jianshu.io/upload_images/4905848-d56f8c5a8f81cb1c.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="code.jpeg"></li></ol></blockquote><blockquote><p>本文<a href="https://github.com/chuzhaozhi/iconfontDemo" target="_blank" rel="noopener">demo</a>,欢迎批评指正，留下你的star哦。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-什么是iconfont&quot;&gt;&lt;a href=&quot;#1-什么是iconfont&quot; class=&quot;headerlink&quot; title=&quot;1.什么是iconfont&quot;&gt;&lt;/a&gt;1.什么是iconfont&lt;/h2&gt;&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;iconFont拆开来看，就是 Icon + Font，这样估计大家应该都能理解是什么，那两者结合是什么呢？没错！就是 IconFont ！让开发者像使用字体一样使用图标。如果自己不会做的话，可以直接去阿里的&lt;a href=&quot;http://www.iconfont.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iconfont图标库&lt;/a&gt;下载自己需要的图标。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>xxx.app文件已损坏，打不开，解决方案</title>
    <link href="http://chuzhaozhi.cn/xxx-app%E6%96%87%E4%BB%B6%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%EF%BC%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"/>
    <id>http://chuzhaozhi.cn/xxx-app文件已损坏，打不开，解决方案.html</id>
    <published>2018-03-31T07:59:40.000Z</published>
    <updated>2018-04-02T02:50:41.478Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br>现在很多软件是收费的，对于像我等穷屌丝来说，自然是想去找个破解的软件来替代，这个时候遇到xxx.app文件已损坏，打不开的情况，要怎么办呢，别急，以下操作就可以完美解决你的问题。<br></blockquote><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4905848-aca7194695daddb2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件已损坏提示.png"></p><p>在Mac OS 更新到10.12之后，苹果爸爸对软件安全更加注重，在10.12之后你将看不到<code>任何来源</code>这个选项了</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-0ca1daa82e234279.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="允许任何来源.png"></p><p>那么，我们在Mac OS 10.12之后要怎么才能显示这个任何来源的选项呢，其实很简单，你只需要在终端里输入<code>sudo spctl --master-disable</code></p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-0465eb1fc304cfff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="输入命令.png"><br>这个时候会提示你输入电脑密码，（你输入的会不显示出来）输入密码后点击回车键，这个时候就打开了</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-d0509b61fb6e5a4f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开选项.jpg"><br>这个时候，点击左下角的<code>🔐</code>,会让你输入电脑密码<br><img src="http://upload-images.jianshu.io/upload_images/4905848-a9e47dd978b567b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="输入密码.png"><br>之后就可以选择任何来源了</p><p><img src="http://upload-images.jianshu.io/upload_images/4905848-abf1997c19032134.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="提示.png"><br>点击<code>允许任何来源</code><br>这个时候你就可以打开之前提示文件损坏的软件了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;现在很多软件是收费的，对于像我等穷屌丝来说，自然是想去找个破解的软件来替代，这个时候遇到xxx.app文件已损坏，打不开的情况，要怎么办呢，别急，以下操作就可以完美解决你的问题。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
